---
# - name: Download source prometheus
#   get_url:
#     url: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
#     dest: /home/{{ lookup('env','USER') }}
    # checksum: "sha256:{{ prometheus_sha256sum_url }}"

- name:  Download and Unpack prometheus file
  unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
    dest: /tmp
    remote_src: yes

- name: Copy binaries file into /usr/local/bin
  copy:
    src: /tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  with_items:
    - prometheus
    - promtool

- name: Delete other files not use
  file:
    path: /tmp/{{ item }}
    state: absent
  with_items:
    # - prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
    - prometheus-{{ prometheus_version }}.linux-amd64

- name: Make directory for config and data
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - /var/lib/prometheus
    - /etc/prometheus
    - /etc/prometheus/rules

- name: Add targets
  tags: [targets]
  template:
    src: prometheus/prometheus_target.j2
    dest: /etc/prometheus/targets.json
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: Add alert rules
  tags: [alerts]
  copy:
    src: prometheus_{{ item }}.yml
    dest: /etc/prometheus/rules/{{ item }}.yml
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    validate: /usr/local/bin/promtool check rules %s
  with_items:
    - record_rules
    - alert_rules
  notify: Reload prometheus

- name: Copy prometheus config file
  tags: [prometheus_config]
  template:
    src: prometheus/prometheus_config.j2
    dest: /etc/prometheus/config.yml
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    validate: /usr/local/bin/promtool check config %s
  notify: Reload prometheus

- name: Create prometheus systemd service
  template:
    src: prometheus/prometheus_service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: Start prometheus systemd
  systemd:
    name: prometheus
    state: started
    daemon_reload: yes
    enabled: yes
    masked: no
